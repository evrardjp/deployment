---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: front
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: myresolver
spec:
  rules:
  - host: play.workadventure.cluster.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: { "name": "front", "port": { "number": 80 } }
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: back
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: myresolver
spec:
  rules:
  - host: api.workadventure.cluster.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: { "name": "front", "port": { "number": 8080 } }
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: pusher
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: myresolver
spec:
  rules:
  - host: pusher.workadventure.cluster.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: { "name": "front", "port": { "number": 8080 } }
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: uploader
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: myresolver
spec:
  rules:
  - host: uploader.workadventure.cluster.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: { "name": "front", "port": { "number": 8080 } }
